{"version":3,"sources":["pages/Home/index.js","componets/Navbar/index.js","pages/Product/index.js","componets/Products/index.js","pages/Sites/index.js","componets/Total/index.js","componets/Item/index.js","pages/Cart/index.js","serviceWorker.js","index.js"],"names":["Home","className","src","sites","map","site","key","to","location","name","Navbar","handleCallback","Buttonback","placeholder","type","onKeyDown","e","keyCode","handleClick","onChange","target","value","onClick","icon","faSearch","Product","props","state","title","price","condition","img","pictures","sold","available_quantity","description","attributes","mouse","ser","inputValue","id","this","match","params","fetch","data","info","json","Json","setState","thumbnail","sold_quantity","plain_text","axios","method","headers","url","quantity","console","log","poc","stringifiedCart","localStorage","getItem","parseCart","JSON","parse","push","newCart","stringify","setItem","history","call","attr","slice","handleButton","pic","onMouseOver","handleOver","clickBuy","Click","atr","value_name","React","Component","Products","item","product","Sites","useState","items","setItems","useParams","setInputValue","modal","setModal","search","setSearch","loading","setLoading","useEffect","a","results","fetchData","filter","toLowerCase","includes","Total","total","Item","qty","setQty","r","result","Cart","products","setProducts","setTotal","stringifiedProducts","pro","i","Boolean","window","hostname","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c6161a0d.chunk.js","sourcesContent":["import React from 'react';\nimport sites from '../../../src/data/sites.json'\nimport './style.scss'\nimport {Link} from 'react-router-dom'\n\nfunction Home(){\n\n  return (\n      <>\n      <div className='wrapper'>\n\n      <div className='imgContent'> <img src='https://static.mlstatic.com/org-img/homesnw/img/ml-logo-small.png?v=3.0'/>\n      </div>\n      <div className='map'>\n          {sites.map((site, key) => {\n            return (\n              <div className='countries' key={key}>\n                <ul>\n             <Link to={`/Sites/${site.location}`}>   \n              {site.name} </Link>\n              </ul>\n              </div>\n            )\n          })}\n        </div>\n\n      </div>\n\n\n      </>\n  )\n}\n\nexport default Home;","import React from \"react\"\nimport './style.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nfunction Navbar({handleCallback, Buttonback}) {\n  \nfunction handleChange(e) {\n  handleCallback(e.target.value);\n  \n\n  \n}\n\nfunction handleClick(e) {\n  if(e.keyCode == 13) {\n    \n    Buttonback()\n    \n  }\n\n  }\n\n function handleSearch() {\n\n  Buttonback()\n\n } \n\n return (\n\n    <>\n    <div className='inputWrapper'>\n      <div>\n        \n      </div>\n    <div className='inputNav'>\n    <img className='logo' src='https://static.mlstatic.com/org-img/homesnw/img/ml-logo-small.png?v=3.0'/>\n    <input  placeholder=\"Buscar productos,marcas y mas..\" className='find' type=\"text\" onKeyDown={(e) => handleClick(e)} onChange={handleChange}/>\n    <a ><FontAwesomeIcon className='svgIcon' onClick={handleSearch} icon={faSearch} /></a>\n    </div>\n  \n\n\n    </div>\n    </>\n\n  )\n}\n\nexport default Navbar;","import React from 'react'\nimport './style.scss'\nimport ReactMarkdown from 'react-markdown'\nimport Navbar from '../../componets/Navbar'\nimport axios from 'axios'\n\n\n\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      price: '',\n      condition: '',\n      img: null,\n      pictures: [],\n      sold: '',\n      available_quantity: '',\n      description: '',\n      attributes: [],\n      mouse: false,\n      ser: [],\n      inputValue: ''\n\n    };\n\n\n  }\n\n\n\n\n  async componentDidMount() {\n\n    const { id } = this.props.match.params\n\n\n\n    const data = await fetch(`https://api.mercadolibre.com/items/${id}`);\n    const info = await fetch(`https://api.mercadolibre.com/items/${id}/description`)\n    const Json = await info.json();\n    const json = await data.json();\n\n    \n\n\n    this.setState({\n      title: json.title,\n      price: json.price,\n      img: json.thumbnail,\n      pictures: json.pictures,\n      sold: json.sold_quantity,\n      condition: json.condition,\n      available_quantity: json.available_quantity,\n      description: Json.plain_text,\n      attributes: json.attributes,\n\n\n    })\n\n  }\n\n async clickBuy(title,price) {\n   \n    \n\n  try {\n    \n    const ax = await axios({\n      method:\"POST\",\n      headers:{\n        'Content-type': 'application/json', \n      },\n      url:\"http://localhost:4000/checkout\",\n\n      data: {\n        title:title,\n        price:price,\n        quantity: 1\n      }\n      \n    });\n  } catch(err) {\n    console.log(err)\n    \n  }\n \n  }\n\n\n  Click(title, price, poc) {\n\n    const cart = 'cart'\n\n\n    const stringifiedCart = localStorage.getItem(`${cart}`)\n    if (stringifiedCart) {\n      const parseCart = JSON.parse(stringifiedCart)\n      parseCart.push({ title, price, poc })\n      const newCart = JSON.stringify(parseCart)\n      localStorage.setItem(`${cart}`, newCart)\n    }\n    else {\n      const parseCart = [{ title, price, poc }]\n      const newCart = JSON.stringify(parseCart)\n      localStorage.setItem(`${cart}`, newCart)\n    }\n    this.props.history.push('/Cart')\n\n  }\n\n  handleOver() {\n\n    this.setState({\n      mouse: true\n\n    })\n\n  }\n\n  handleCallback(call) {\n\n\n    this.setState({\n\n\n      inputValue: call\n    }\n    )\n  }\n\n  handleButton() {\n\n    const { inputValue } = this.state\n\n\n\n\n\n  }\n\n\n\n\n  render() {\n    const { title, price, pictures, sold, condition, available_quantity, description, attributes, mouse } = this.state\n    const attr = attributes.slice(0, 4)\n    const poc = pictures.slice(0, 1)\n\n\n    return (\n      <>\n\n        <Navbar handleCallback={(call) => this.handleCallback(call)} Buttonback={() => this.handleButton()} />\n\n        <div className='itemMain'>\n          <div className='itemWrapper'>\n            <div className='initialInfo'>\n              <div className='itemPics'>\n\n                <ul className='ulPic'>\n\n                  {poc.map((pic, key) => {\n\n                    return (\n\n                      <div key={key} onMouseOver={() => this.handleOver()} className='gpic'>\n\n                        {<img className='pic' src={pic.url} />}\n\n                      </div>\n\n                    )\n                  })}\n\n\n\n                </ul>\n\n                <div className='max'>\n\n                  {mouse && poc.map((pic, key) => {\n                    return (\n\n                      <>\n                        <div key={key}>\n                          {<img className='maxPic' src={pic.url} />}\n                        </div>\n                      </>\n\n                    )\n                  })}\n\n\n\n                </div>\n\n\n\n              </div>\n              <div className='itemInf'>\n                <p className='condition'> {condition} | {sold} vendidos </p>\n                <p className='itemTitle'>{title}</p>\n                <p className='itemPrice'>$  {price}</p>\n                <p className='itemCuote'>Paga hasta en 12 cuotas</p>\n                {price <= 2499 ? <p> Costo de envio </p> : <p className='itemSend'>Envio gratis</p>}\n                <p className='itemCuote' >stock disponible</p>\n                <p className='itemCuote'>Cantidad:({available_quantity} disponibles)</p>\n                  \n                <button className='buy Button' onClick={() => this.clickBuy(title,price)} >Comprar ahora</button>\n              \n                <button onClick={() => this.Click(title, price, poc)} className='cart Button'>Agregar al carrito</button>\n              </div>\n            </div>\n\n\n            <div className='attributes'>\n\n              <h3>Caracteristicas principales</h3>\n              <table className='atr'>\n                {attr.map((atr) => {\n                  return (\n\n\n                    <tbody key={atr.id}>\n\n                      <tr className='tr'><th className='th' ><span >{atr.name}</span></th><td className='td'><span>{atr.value_name}</span></td></tr>\n                    </tbody>\n\n\n\n\n                  )\n                })}\n              </table>\n            </div>\n            <div className='description'>\n\n              <h4>Descripcion</h4>\n\n              <ReactMarkdown className='descPro'>{description}</ReactMarkdown>\n\n            </div>\n\n\n\n          </div>\n\n\n\n\n\n        </div>\n\n\n\n      </>\n    )\n  }\n}\n\nexport default Product","import React, { useEffect, useState } from \"react\";\nimport './style.scss'\nimport {Link} from 'react-router-dom'\nimport Product from '../../pages/Product'\n\n\nfunction Products (props) {\n    \n    const { item, price, img, product, } = props; \n    \n   \n\n    return (\n    \n\n        <>\n        \n    \n       \n        <div className='product'>  \n         <div className=\"info\"> \n         <Link to={`/product/${product}`}> <p className='pItem'>{item}</p>  </Link>\n          <p className=\"pPrice\">${price}</p>\n    \n           \n          </div>\n          <div className=\"itemImg\">\n          <img src={img}/>\n          </div>\n          </div>\n\n        </>\n\n    );\n}\n\nexport default Products;","import React, { useEffect, useState} from 'react';\nimport Products from \"../../componets/Products\";\nimport {useParams} from \"react-router-dom\"\nimport Navbar from \"../../componets/Navbar\"\nimport './style.scss'\n\n\nfunction Sites() {\n  const [items , setItems] = useState([]);\n  const {site} = useParams();\n  const [inputValue, setInputValue] = useState(\"\")\n  const [modal, setModal] = useState(false)\n  const [search, setSearch] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  \n \n  useEffect(() => {\n  \n      async function fetchData() {\n      setLoading(true)\n      const data = await fetch (`https://api.mercadolibre.com/sites/${site}/search?q=${inputValue}&limit=10`);\n      const Json = await data.json();\n  \n      \n      setItems(Json.results)\n      setLoading(false)\n      \n      \n    }\n    \n    \n     fetchData(); \n\n\n  }, [search] ); \n  \n\n\n\nfunction handleClick() {\n  setModal(!modal)\n  \n  \n  \n}    \n    \n\nfunction handleCallback(call) {\n  setInputValue(call)\n  \n}\n\nfunction handleButton () {\n\n  setSearch(inputValue)  \n\n}\n\n\n  return (\n\n    <>\n     \n    <Navbar handleCallback={handleCallback}  Buttonback={handleButton}/>\n\n\n    <div className='main'>\n     <div className='tagsProduct'>\n      <h2>Producto</h2>\n      <h3>Ordenar publicaciones</h3>\n      { !modal ? \n     <button className=\"prime\" onClick={handleClick}>Mas relevantes👇🏻{modal}</button>\n      : <div><button className=\"prime\" onClick={handleClick}>Mas relevantes☝🏻{modal}</button> <div className='modal'><p>Mas relevantes</p> <p>Menor precio</p> <p>Mayor precio</p></div> </div>\n      }    \n    \n      <h3>Categorias</h3>\n      <h3>Ubicacion</h3>\n      \n\n      </div> \n \n    <div className='productWrapper'>\n    \n     \n      {loading ? ( <p>Cargando</p>) :   \n\n        items.filter((item) => {\n        return (item.title.toLowerCase().includes(inputValue.toLowerCase())\n        )\n      }).map((item, key) => {\n        return (\n        \n          <Products key={key} product={item.id} item={item.title} img={item.thumbnail} price={item.price}/>\n        \n        )\n      })\n      }\n\n      \n \n\n        </div>\n        </div>    \n    </>\n\n\n  )\n}\nexport default Sites;","import React from 'react'\nimport './style.scss'\n\nfunction Total({total}) {\n  return (\n\n    <>\n    <div className='totalCart'>\n\n      <span>Total:$</span> <span>{total}</span>\n      \n\n    </div>\n\n\n    </>\n\n\n  )\n}\n\nexport default Total;","import React, { useState } from 'react'\nimport Total from '../Total'\n\nfunction Item(props) {\n    const {title, price} = props\n    const [qty, setQty] = useState(1);\n\n   \n    function handleClick(r) {\n        const result = r == 'less' ? qty - 1 : qty + 1\n        \n        if (result >= 1) {\n         props.handleCallback(r,price)\n         \n       setQty(result) }\n     \n    }\n     \n        \n    \n     \n        \n\n    return (\n<>\n<div className='cartTitle'>\n<p>{title}</p>\n</div>\n<div className=\"cartQty\" > \n<button className='cartButton' onClick={() => handleClick('less')} >-</button>\n<span className='spanPrice'>{qty}</span> \n<button className='cartButton' onClick={() => handleClick('more')}>+</button>\n</div>\n<div className='cartPrice'>\n    <span className='totalPrice'>${price * qty}</span>\n    </div>\n\n\n</>\n\n    )\n\n}\n\n\nexport default Item;","import React, { useEffect, useState } from 'react'\nimport './style.scss'\nimport Navbar from '../../componets/Navbar'\nimport Total from '../../componets/Total'\nimport Item from '../../componets/Item'\n\n\nfunction Cart() {\n  const [products, setProducts] = useState([]);\n  const [total,setTotal] = useState(0);\n \n\n\n  \n\n\n useEffect(() => { \n\n  // const arr = Object.keys(localStorage)\n  \n  // const iterateArray = (arr) => {\n  //   for(let i=0; i<=arr.length-1; i++)  {\n  //   console.log(arr[i]);\n  //   }\n  // }\n\n  // const cart = iterateArray(arr)\n  \n  const stringifiedProducts = localStorage.getItem('cart')\n  const products = JSON.parse(stringifiedProducts) \n\n\n\n  setProducts(products)\n\n  let total = 0\n  products && products.map((product) => {\n    total = total + product.price\n    \n  } )\n  setTotal( total )\n\n }, [] );\n\nfunction handleCallback(r,price) {\n  \n  const result = r == 'less' ? total - price : total + price\n\n  setTotal(result)\n\n}\n\n\n\n   return (\n\n<>\n\n<Navbar/>\n\n\n<div className='mainCart'> \n\n<div className='cart'>\n<div className='lineCart'> </div>\n\n{products && products.map((pro,key) => {\n  return (\n  \n    <div className='itemCart' key={key}>\n      \n    {pro.poc.map((i,key) => {\n      return (\n        <>\n        \n        <img className='imgCart' key={key} src={i.url}/>\n \n        </>\n      )\n    }  )}\n     <Item handleCallback={(r,price) => handleCallback(r,price)} price={pro.price} title={pro.title} />\n  \n     \n    </div>\n    \n    \n    \n\n  )\n})}\n\n<Total total={total} />\n\n<div className='cartBuy'>\n\n<button className='buyButton'>Continuar compra</button>\n\n</div>\n\n</div>\n\n\n\n\n</div>\n\n\n\n\n</>\n\n)\n\n\n}\n\n\nexport default Cart;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/Home'\nimport Sites from './pages/Sites'\nimport Product from './pages/Product'\nimport Cart from './pages/Cart'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <Router>\n    \n    <Route exact path='/MercadoHooks' component={Home} />\n    <Route exact path='/Sites/:site' component={Sites} />\n    <Route exact path='/product/:id' component={Product} />\n    <Route exact path='/cart/' component={Cart} />\n    \n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}